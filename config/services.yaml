# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.locales: [fr, en]
    app.public_dir: '%kernel.project_dir%/web'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Athorrent\:
        resource: '../src/*'
        exclude: '../src/{Cache,Entity,Filesystem,Ipc,Migrations,Notification,Routing,Security,Tests,Tools,Utils,View,ExceptionListener.php,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Athorrent\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Athorrent\Cache\CacheCleaner:
        arguments: ['@simple_cache', '%kernel.cache_dir%']

    Athorrent\Database\Repository\SharingRepository:
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: [Athorrent\Database\Entity\Sharing]

    Athorrent\Database\Repository\UserRepository:
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: [Athorrent\Database\Entity\User]

    Athorrent\Filesystem\FilesystemFactory:
        arguments:

    Athorrent\Filesystem\FilesystemConverter:
        tags:
            - { name: request.param_converter, priority: -2 }

    Athorrent\Utils\TorrentManagerConverter:
        tags:
            - { name: request.param_converter, priority: 0 }

    Athorrent\Routing\AnnotationDirectoryLoader:
        tags: [routing.loader]

    Athorrent\Routing\AnnotationClassLoader:
        arguments:
            $locales: '%app.locales%'
            $defaultLocale: '%kernel.default_locale%'

    Athorrent\Routing\RoutingListener:
        arguments:
            - '@simple_cache'

        tags: [kernel.event_subscriber]

    Athorrent\Security\UserManager:

    Athorrent\Security\Csrf\CsrfListener:
        tags: [kernel.event_subscriber]

    Athorrent\Utils\TorrentManagerFactory:

    Athorrent\View\Renderer:

    Athorrent\Notification\NotificationListener:
        tags: [kernel.event_subscriber]

    Athorrent\View\ViewListener:
        tags: [kernel.event_subscriber]

    Athorrent\View\TwigHelperExtension:
        arguments: ['%app.public_dir%']
        tags: [twig.extension]

    Phpfastcache\Bundle\Twig\CacheExtension\CacheStrategy\LifetimeCacheStrategy:
        class: Athorrent\Cache\Twig\GenerationalCacheStrategy
        arguments:
            - '@Phpfastcache\Bundle\Twig\CacheExtension\CacheProvider\PsrCacheAdapter'
            - '@?Phpfastcache\Bundle\DataCollector\CacheCollector'
            - '%phpfastcache%'
            - '@Athorrent\Cache\Twig\KeyGenerator'

    Athorrent\Cache\Twig\KeyGenerator:

    cache_driver:
        class: Phpfastcache\Core\Pool\ExtendedCacheItemPoolInterface
        factory: ['@Phpfastcache\Bundle\Service\Phpfastcache', 'get']
        arguments: ['filecache']

    simple_cache:
        class: Phpfastcache\Helper\Psr16Adapter
        arguments: ['Files']

    app.doctrine.hash_password_listener:
        class: Athorrent\Security\HashPasswordListener
        tags:
            - { name: doctrine.event_subscriber }

    app.login_listener:
        class: Athorrent\Security\LoginListener
        tags:
            - { name: kernel.event_subscriber }

    app.request_listener:
        class: Athorrent\RequestListener
        tags:
            - { name: kernel.event_subscriber }
